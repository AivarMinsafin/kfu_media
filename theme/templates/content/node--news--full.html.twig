{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
<article{{ attributes }}>

    {#
    {{ title_prefix }}
    {% if not page %}
        <h2{{ title_attributes }}>
            <a href="{{ url }}" rel="bookmark">{{ label }}</a>
        </h2>
    {% endif %}
    {{ title_suffix }}

    {% if display_submitted %}
        <footer>
            {{ author_picture }}
            <div{{ author_attributes }}>
                {% trans %}Submitted by {{ author_name }} on {{ date }}{% endtrans %}
                {{ metadata }}
            </div>
        </footer>
    {% endif %}
    #}
    <div class="newsCart-top">
        <div class="newsCart-title">{{ label }}</div>
        <div>
            <div class="newsCart-cat"><strong>Тема:</strong>
                {% if cat | length > 1 and cat | length < 2%}
                    {% for c in cat %}
                        {{ c["value"] }}, &nbsp;
                    {% endfor %}

                {% elseif cat | length == 0 %}
                    Общие новости
                {% else %}
                    {% for c in cat %}
                        {{ c["value"] }}
                    {% endfor %}
                {% endif %}
            </div>
            <div class="newsCart-date"><strong>Дата публикации:</strong> {{ node.getCreatedTime() | date(format='d.m.Y') }}</div>
        </div>
    </div>
    <p{{ content_attributes }}>
        <div class="summary">{{ summary|replace({"&amp;": "&"})|raw }}</div>
        {% if image | length > 1 %}
            <div class="newsCart-slider uk-slidenav-position" data-uk-slider="">
                <div class="uk-slider-container">
                    <ul class="uk-slider">
            {% for img in image %}
                <li class = "uk-width-1-1"><img src = "{{ img }}"></li>
            {% endfor %}
                    </ul>
                </div>
                <a href="" class="uk-slidenav uk-slidenav-previous" data-uk-slider-item="previous" draggable="false"><svg role="img"><use xlink:href="#left-arrow"/></svg></a>
                <a href="" class="uk-slidenav uk-slidenav-next" data-uk-slider-item="next" draggable="false"><svg role="img"><use xlink:href="#right-arrow"/></svg></a>
            </div>
        {% elseif image | length == 1%}
            <img src = "{{ image[0] }}" width="100%">
        {% endif %}
        <div class="body-text">{{ text | raw }}</div>
    <div class="files" style="margin-bottom: 50px;">{{ files|raw }}</div>
    {% if autor != "Гость" %}
        <div class="news-autor"><strong>Автор: </strong>{{ autor }}</div>
    {% endif %}
        <div class="newsCart-actions uk-flex" style="margin-bottom: 50px;">
            <div style="float:left">
                <img src="/themes/inno/images/views.png">&nbsp;{{ stat }}
            </div>
            <div class="newsCart-actionsRight shareBlock" style="text-align:right;">
                <script src="https://yastatic.net/es5-shims/0.0.2/es5-shims.min.js"></script>
                <script src="https://yastatic.net/share2/share.js"></script>
                <div class="ya-share2" data-services="vkontakte,facebook,twitter" ></div>
            </div>
        </div>
    </div>
</article>
{{ comments }}

